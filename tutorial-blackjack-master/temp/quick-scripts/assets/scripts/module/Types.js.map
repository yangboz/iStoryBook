{"version":3,"sources":["Types.js"],"names":["Suit","cc","Enum","Spade","Heart","Club","Diamond","A2_10JQK","split","Card","point","suit","Object","defineProperties","value","writable","id","pointName","get","suitName","isBlackSuit","isRedSuit","prototype","toString","cards","Array","fromId","createCards","s","p","card","ActorPlayingState","Normal","Stand","Report","Bust","Outcome","Win","Lose","Tie","Hand","BlackJack","FiveCard","module","exports"],"mappings":";;;;;;AAAA,IAAIA,OAAOC,GAAGC,IAAH,CAAQ;AACfC,WAAO,CADQ,EACH;AACZC,WAAO,CAFQ,EAEH;AACZC,UAAM,CAHS,EAGH;AACZC,aAAS,CAJM,CAIH;AAJG,CAAR,CAAX;;AAOA,IAAIC,WAAW,iCAAiCC,KAAjC,CAAuC,GAAvC,CAAf;;AAEA;;;;;;;;AAQA,SAASC,IAAT,CAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AACxBC,WAAOC,gBAAP,CAAwB,IAAxB,EAA8B;AAC1BH,eAAO;AACHI,mBAAOJ,KADJ;AAEHK,sBAAU;AAFP,SADmB;AAK1BJ,cAAM;AACFG,mBAAOH,IADL;AAEFI,sBAAU;AAFR,SALoB;AAS1B;;;AAGAC,YAAI;AACAF,mBAAO,CAACH,OAAO,CAAR,IAAa,EAAb,IAAmBD,QAAQ,CAA3B,CADP;AAEAK,sBAAU;AAFV,SAZsB;AAgB1B;AACAE,mBAAW;AACPC,iBAAK,eAAY;AACb,uBAAOX,SAAS,KAAKG,KAAd,CAAP;AACH;AAHM,SAjBe;AAsB1BS,kBAAU;AACND,iBAAK,eAAY;AACb,uBAAOlB,KAAK,KAAKW,IAAV,CAAP;AACH;AAHK,SAtBgB;AA2B1BS,qBAAa;AACTF,iBAAK,eAAY;AACb,uBAAO,KAAKP,IAAL,KAAcX,KAAKG,KAAnB,IAA4B,KAAKQ,IAAL,KAAcX,KAAKK,IAAtD;AACH;AAHQ,SA3Ba;AAgC1BgB,mBAAW;AACPH,iBAAK,eAAY;AACb,uBAAO,KAAKP,IAAL,KAAcX,KAAKI,KAAnB,IAA4B,KAAKO,IAAL,KAAcX,KAAKM,OAAtD;AACH;AAHM;AAhCe,KAA9B;AAsCH;;AAEDG,KAAKa,SAAL,CAAeC,QAAf,GAA0B,YAAY;AAClC,WAAO,KAAKJ,QAAL,GAAgB,GAAhB,GAAsB,KAAKF,SAAlC;AACH,CAFD;;AAIA;AACA,IAAIO,QAAQ,IAAIC,KAAJ,CAAU,EAAV,CAAZ;;AAEA;;;;AAIAhB,KAAKiB,MAAL,GAAc,UAAUV,EAAV,EAAc;AACxB,WAAOQ,MAAMR,EAAN,CAAP;AACH,CAFD;;AAIA;AACA,CAAC,SAASW,WAAT,GAAwB;AACrB,SAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,aAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,EAArB,EAAyBA,GAAzB,EAA8B;AAC1B,gBAAIC,OAAO,IAAIrB,IAAJ,CAASoB,CAAT,EAAYD,CAAZ,CAAX;AACAJ,kBAAMM,KAAKd,EAAX,IAAiBc,IAAjB;AACH;AACJ;AACJ,CAPD;;AASA;AACA,IAAIC,oBAAoB9B,GAAGC,IAAH,CAAQ;AAC5B8B,YAAQ,CAAC,CADmB;AAE5BC,WAAO,CAAC,CAFoB,EAEhB;AACZC,YAAQ,CAAC,CAHmB,EAGhB;AACZC,UAAM,CAAC,CAJqB,CAIhB;AAJgB,CAAR,CAAxB;;AAOA;AACA,IAAIC,UAAUnC,GAAGC,IAAH,CAAQ;AAClBmC,SAAK,CAAC,CADY;AAElBC,UAAM,CAAC,CAFW;AAGlBC,SAAK,CAAC;AAHY,CAAR,CAAd;;AAMA;AACA,IAAIC,OAAOvC,GAAGC,IAAH,CAAQ;AACf8B,YAAQ,CAAC,CADM,EACC;AAChBS,eAAW,CAAC,CAFG,EAEC;AAChBC,cAAU,CAAC,CAHI,CAGC;AAHD,CAAR,CAAX;;AAMAC,OAAOC,OAAP,GAAiB;AACb5C,UAAMA,IADO;AAEbS,UAAMA,IAFO;AAGbsB,uBAAmBA,iBAHN;AAIbS,UAAMA,IAJO;AAKbJ,aAASA;AALI,CAAjB","file":"Types.js","sourceRoot":"../../../../../assets/scripts/module","sourcesContent":["var Suit = cc.Enum({\n    Spade: 1,   // 黑桃\n    Heart: 2,   // 红桃\n    Club: 3,    // 梅花(黑)\n    Diamond: 4, // 方块(红)\n});\n\nvar A2_10JQK = 'NAN,A,2,3,4,5,6,7,8,9,10,J,Q,K'.split(',');\n\n/**\n * 扑克牌类，只用来表示牌的基本属性，不包含游戏逻辑，所有属性只读，\n * 因此全局只需要有 52 个实例（去掉大小王），不论有多少副牌\n * @class Card\n * @constructor\n * @param {Number} point - 可能的值为 1 到 13\n * @param {Suit} suit\n */\nfunction Card (point, suit) {\n    Object.defineProperties(this, {\n        point: {\n            value: point,\n            writable: false\n        },\n        suit: {\n            value: suit,\n            writable: false\n        },\n        /**\n         * @property {Number} id - 可能的值为 0 到 51\n         */\n        id: {\n            value: (suit - 1) * 13 + (point - 1),\n            writable: false\n        },\n        //\n        pointName: {\n            get: function () {\n                return A2_10JQK[this.point];\n            }\n        },\n        suitName: {\n            get: function () {\n                return Suit[this.suit];\n            }\n        },\n        isBlackSuit: {\n            get: function () {\n                return this.suit === Suit.Spade || this.suit === Suit.Club;\n            }\n        },\n        isRedSuit: {\n            get: function () {\n                return this.suit === Suit.Heart || this.suit === Suit.Diamond;\n            }\n        },\n    });\n}\n\nCard.prototype.toString = function () {\n    return this.suitName + ' ' + this.pointName;\n};\n\n// 存放 52 张扑克的实例\nvar cards = new Array(52);\n\n/**\n * 返回指定 id 的实例\n * @param {Number} id - 0 到 51\n */\nCard.fromId = function (id) {\n    return cards[id];\n};\n\n// 初始化所有扑克牌\n(function createCards () {\n    for (var s = 1; s <= 4; s++) {\n        for (var p = 1; p <= 13; p++) {\n            var card = new Card(p, s);\n            cards[card.id] = card;\n        }\n    }\n})();\n\n// 手中牌的状态\nvar ActorPlayingState = cc.Enum({\n    Normal: -1,\n    Stand: -1,  // 停牌\n    Report: -1, // 报到\n    Bust: -1,   // 爆了\n});\n\n// 输赢\nvar Outcome = cc.Enum({\n    Win: -1,\n    Lose: -1,\n    Tie: -1,\n});\n\n// 牌型，值越大越厉害\nvar Hand = cc.Enum({\n    Normal: -1,     // 无\n    BlackJack: -1,  // 黑杰克\n    FiveCard: -1,   // 五小龙\n});\n\nmodule.exports = {\n    Suit: Suit,\n    Card: Card,\n    ActorPlayingState: ActorPlayingState,\n    Hand: Hand,\n    Outcome: Outcome,\n};\n"]}