{"version":3,"sources":["Dealer.js"],"names":["Actor","require","Utils","cc","Class","extends","properties","bestPoint","get","cards","holeCard","concat","minMax","getMinMaxPoint","max","override","init","_super","renderer","initDealer","wantHit","Game","Types","player","instance","outcome","_getPlayerResult","Outcome","Win","Lose"],"mappings":";;;;;;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,QAAQD,QAAQ,OAAR,CAAZ;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASL,KADJ;;AAGLM,gBAAY;AACR;AACAC,mBAAW;AACPC,iBAAK,eAAY;AACb,oBAAIC,QAAQ,KAAKC,QAAL,GAAgB,CAAC,KAAKA,QAAN,EAAgBC,MAAhB,CAAuB,KAAKF,KAA5B,CAAhB,GAAqD,KAAKA,KAAtE;AACA,oBAAIG,SAASV,MAAMW,cAAN,CAAqBJ,KAArB,CAAb;AACA,uBAAOG,OAAOE,GAAd;AACH,aALM;AAMPC,sBAAU;AANH;AAFH,KAHP;;AAeLC,UAAM,gBAAY;AACd,aAAKC,MAAL;AACA,aAAKC,QAAL,CAAcC,UAAd;AACH,KAlBI;;AAoBL;AACAC,aAAS,mBAAY;AACjB,YAAIC,OAAOpB,QAAQ,MAAR,CAAX;AACA,YAAIqB,QAAQrB,QAAQ,OAAR,CAAZ;;AAEA,YAAIM,YAAY,KAAKA,SAArB;;AAEA;AACA,YAAIA,cAAc,EAAlB,EAAsB;AAClB,mBAAO,KAAP;AACH;;AAED;AACA,YAAIA,aAAa,KAAK,EAAtB,EAA0B;AACtB,mBAAO,IAAP;AACH;;AAED,YAAIgB,SAASF,KAAKG,QAAL,CAAcD,MAA3B;AACA,YAAIE,UAAUJ,KAAKG,QAAL,CAAcE,gBAAd,CAA+BH,MAA/B,EAAuC,IAAvC,CAAd;;AAEA,gBAAQE,OAAR;AACI,iBAAKH,MAAMK,OAAN,CAAcC,GAAnB;AACI,uBAAO,IAAP;AACJ,iBAAKN,MAAMK,OAAN,CAAcE,IAAnB;AACI,uBAAO,KAAP;AAJR;;AAOA,eAAO,KAAKtB,SAAL,GAAiB,EAAxB;AACH;AAhDI,CAAT","file":"Dealer.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["var Actor = require('Actor');\nvar Utils = require('Utils');\n\ncc.Class({\n    extends: Actor,\n\n    properties: {\n        // 手上最接近 21 点的点数（有可能超过 21 点）\n        bestPoint: {\n            get: function () {\n                var cards = this.holeCard ? [this.holeCard].concat(this.cards) : this.cards;\n                var minMax = Utils.getMinMaxPoint(cards);\n                return minMax.max;\n            },\n            override: true\n        },\n    },\n\n    init: function () {\n        this._super();\n        this.renderer.initDealer();\n    },\n\n    // 返回是否要牌\n    wantHit: function () {\n        var Game = require('Game');\n        var Types = require('Types');\n\n        var bestPoint = this.bestPoint;\n\n        // 已经最大点数\n        if (bestPoint === 21) {\n            return false;\n        }\n\n        // 不论抽到什么牌肯定不会爆，那就接着抽\n        if (bestPoint <= 21 - 10) {\n            return true;\n        }\n\n        var player = Game.instance.player;\n        var outcome = Game.instance._getPlayerResult(player, this);\n\n        switch (outcome) {\n            case Types.Outcome.Win:\n                return true;\n            case Types.Outcome.Lose:\n                return false;\n        }\n\n        return this.bestPoint < 17;\n    },\n});\n"]}