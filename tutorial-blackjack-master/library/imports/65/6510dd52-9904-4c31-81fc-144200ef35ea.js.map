{"version":3,"sources":["../../../../../assets/scripts/module/assets/scripts/module/game-fsm.js"],"names":["State","require","instance","model","playing","on","message","msgToEvaluate","evaluating","exports","init","target","console","StateMachine","initial","PseudoState","PseudoStateKind","Initial","bet","settled","to","when","entry","onBetState","exit","onEndState","initialP","deal","playersTurn","dealersTurn","onEnterDealState","onPlayersTurnState","onEnterDealersTurnState","StateMachineInstance","initialise","toDeal","_evaluate","toBet","onDealed","onPlayerActed","onDealerActed","setTimeout","evaluate","_getInstance","_getModel","module"],"mappings":"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","file":"game-fsm.js","sourceRoot":"../../../../../assets/scripts/module","sourcesContent":["var State = require('state.com');\n\nvar instance;\nvar model;\nvar playing;\n\nfunction on (message) {\n    return function (msgToEvaluate) {\n        return msgToEvaluate === message;\n    };\n}\n\nvar evaluating = false;\n\nexports = {\n    init: function (target) {\n        // send log messages, warnings and errors to the console\n        State.console = console;\n\n        model = new State.StateMachine(\"root\");\n        var initial = new State.PseudoState(\"init-root\", model, State.PseudoStateKind.Initial);\n\n        // 当前这一把的状态\n\n        var bet = new State.State(\"下注\", model);\n        playing = new State.State(\"已开局\", model);\n        var settled = new State.State(\"结算\", model);\n\n        initial.to(bet);\n        bet.to(playing).when(on(\"deal\"));\n        playing.to(settled).when(on(\"end\"));\n        settled.to(bet).when(on(\"bet\"));\n\n        bet.entry(function () {\n            target.onBetState(true);\n        });\n        bet.exit(function () {\n            target.onBetState(false);\n        });\n\n        settled.entry(function () {\n            target.onEndState(true);\n        });\n        settled.exit(function () {\n            target.onEndState(false);\n        });\n\n        // 开局后的子状态\n\n        var initialP = new State.PseudoState(\"init 已开局\", playing, State.PseudoStateKind.Initial);\n        var deal = new State.State(\"发牌\", playing);\n        //var postDeal = new State.State(\"等待\", playing);    // 询问玩家是否买保险，双倍、分牌等\n        var playersTurn = new State.State(\"玩家决策\", playing);\n        var dealersTurn = new State.State(\"庄家决策\", playing);\n\n        initialP.to(deal);\n        deal.to(playersTurn).when(on(\"dealed\"));\n        playersTurn.to(dealersTurn).when(on(\"player acted\"));\n\n        deal.entry(function () {\n            target.onEnterDealState();\n        });\n        playersTurn.entry(function () {\n            target.onPlayersTurnState(true);\n        });\n        playersTurn.exit(function () {\n            target.onPlayersTurnState(false);\n        });\n        dealersTurn.entry(function () {\n            target.onEnterDealersTurnState();\n        });\n\n        // create a State machine instance\n        instance = new State.StateMachineInstance(\"fsm\");\n        State.initialise(model, instance);\n    },\n\n    toDeal: function () {\n        this._evaluate('deal');\n    },\n    toBet: function () {\n        this._evaluate('bet');\n    },\n    onDealed: function () {\n        this._evaluate('dealed');\n    },\n    onPlayerActed: function () {\n        this._evaluate('player acted');\n    },\n    onDealerActed: function () {\n        this._evaluate('end');\n    },\n\n    _evaluate: function (message) {\n        if (evaluating) {\n            // can not call fsm's evaluate recursively\n            setTimeout(function () {\n                State.evaluate(model, instance, message);\n            }, 1);\n            return;\n        }\n        evaluating = true;\n        State.evaluate(model, instance, message);\n        evaluating = false;\n    },\n\n    _getInstance: function () {\n        return instance;\n    },\n\n    _getModel: function () {\n        return model;\n    }\n};\n\nmodule.exports = exports;\n"]}