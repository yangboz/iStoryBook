{"version":3,"sources":["Bet.js"],"names":["Game","require","cc","Class","extends","Component","properties","chipPrefab","Prefab","btnChips","default","type","Node","chipValues","anchorChipToss","init","_registerBtns","self","registerBtn","index","i","on","event","instance","addStake","playAddChip","length","startPos","p","randomMinus1To1","chip","instantiate","addChild","setPosition","getComponent","play","resetChips","resetStake","info","enabled","resetTossedChips","removeAllChildren"],"mappings":";;;;;;AAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAYL,GAAGM,MADP;AAERC,kBAAU;AACNC,qBAAS,EADH;AAENC,kBAAMT,GAAGU;AAFH,SAFF;AAMRC,oBAAY;AACRH,qBAAS,EADD;AAERC,kBAAM;AAFE,SANJ;AAURG,wBAAgBZ,GAAGU;AAVX,KAHP;;AAgBL;AACAG,UAAM,gBAAY;AACd,aAAKC,aAAL;AACH,KAnBI;;AAqBLA,mBAAe,yBAAY;AACvB,YAAIC,OAAO,IAAX;AACA,YAAIC,cAAc,SAAdA,WAAc,CAAUC,KAAV,EAAiB;AAC/BF,iBAAKR,QAAL,CAAcW,CAAd,EAAiBC,EAAjB,CAAoB,YAApB,EAAkC,UAAUC,KAAV,EAAiB;AAC/C,oBAAItB,KAAKuB,QAAL,CAAcC,QAAd,CAAuBP,KAAKJ,UAAL,CAAgBM,KAAhB,CAAvB,CAAJ,EAAoD;AAChDF,yBAAKQ,WAAL;AACH;AACJ,aAJD,EAIG,IAJH;AAKH,SAND;AAOA,aAAK,IAAIL,IAAI,CAAb,EAAgBA,IAAIH,KAAKR,QAAL,CAAciB,MAAlC,EAA0C,EAAEN,CAA5C,EAA+C;AAC3CF,wBAAYE,CAAZ;AACH;AACJ,KAjCI;;AAmCLK,iBAAa,uBAAY;AACrB,YAAIE,WAAWzB,GAAG0B,CAAH,CAAK1B,GAAG2B,eAAH,KAAuB,EAA5B,EAAgC3B,GAAG2B,eAAH,KAAuB,EAAvD,CAAf;AACA,YAAIC,OAAO5B,GAAG6B,WAAH,CAAe,KAAKxB,UAApB,CAAX;AACA,aAAKO,cAAL,CAAoBkB,QAApB,CAA6BF,IAA7B;AACAA,aAAKG,WAAL,CAAiBN,QAAjB;AACAG,aAAKI,YAAL,CAAkB,UAAlB,EAA8BC,IAA9B;AACH,KAzCI;;AA2CLC,gBAAY,sBAAY;AACpBpC,aAAKuB,QAAL,CAAcc,UAAd;AACArC,aAAKuB,QAAL,CAAce,IAAd,CAAmBC,OAAnB,GAA6B,KAA7B;AACA,aAAKC,gBAAL;AACH,KA/CI;;AAiDLA,sBAAkB,4BAAY;AAC1B,aAAK1B,cAAL,CAAoB2B,iBAApB;AACH;AAnDI,CAAT","file":"Bet.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["var Game = require('Game');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        chipPrefab: cc.Prefab,\n        btnChips: {\n            default: [],\n            type: cc.Node\n        },\n        chipValues: {\n            default: [],\n            type: 'Integer'\n        },\n        anchorChipToss: cc.Node\n    },\n\n    // use this for initialization\n    init: function () {\n        this._registerBtns();\n    },\n\n    _registerBtns: function () {\n        var self = this;\n        var registerBtn = function (index) {\n            self.btnChips[i].on('touchstart', function (event) {\n                if (Game.instance.addStake(self.chipValues[index])) {\n                    self.playAddChip();\n                }\n            }, this);\n        };\n        for (var i = 0; i < self.btnChips.length; ++i) {\n            registerBtn(i);\n        }\n    },\n\n    playAddChip: function () {\n        var startPos = cc.p(cc.randomMinus1To1() * 50, cc.randomMinus1To1() * 50);\n        var chip = cc.instantiate(this.chipPrefab);\n        this.anchorChipToss.addChild(chip);\n        chip.setPosition(startPos);\n        chip.getComponent('TossChip').play();\n    },\n\n    resetChips: function () {\n        Game.instance.resetStake();\n        Game.instance.info.enabled = false;\n        this.resetTossedChips();\n    },\n\n    resetTossedChips: function () {\n        this.anchorChipToss.removeAllChildren();\n    },\n});\n"]}